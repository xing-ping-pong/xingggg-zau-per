// Migration Setup Helper
const readline = require('readline');
const fs = require('fs');
const path = require('path');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

console.log('üöÄ MySQL to MongoDB Migration Setup\n');

async function askQuestion(question) {
  return new Promise((resolve) => {
    rl.question(question, (answer) => {
      resolve(answer);
    });
  });
}

async function setupMigration() {
  try {
    console.log('Please provide your MySQL database details:\n');
    
    const host = await askQuestion('MySQL Host (default: localhost): ') || 'localhost';
    const user = await askQuestion('MySQL Username (default: root): ') || 'root';
    const password = await askQuestion('MySQL Password (press Enter if no password): ');
    const database = await askQuestion('MySQL Database Name: ');
    const port = await askQuestion('MySQL Port (default: 3306): ') || '3306';
    
    // Create config object
    const config = {
      mysql: {
        host,
        user,
        password,
        database,
        port: parseInt(port)
      },
      migration: {
        skipExisting: true,
        clearExisting: false,
        useExistingImages: true,
        imageBasePath: '/'
      }
    };
    
    // Write config file
    const configPath = path.join(__dirname, 'migrate-config.js');
    const configContent = `// Migration Configuration
// Generated by setup script

module.exports = ${JSON.stringify(config, null, 2)};
`;
    
    fs.writeFileSync(configPath, configContent);
    
    console.log('\n‚úÖ Configuration saved to scripts/migrate-config.js');
    console.log('\nüìã Next Steps:');
    console.log('1. Make sure your MySQL database is running');
    console.log('2. Import your .sql file into the database');
    console.log('3. Run: npm run migrate');
    console.log('\nüéØ Your configuration:');
    console.log(`   Host: ${host}`);
    console.log(`   Database: ${database}`);
    console.log(`   Username: ${user}`);
    console.log(`   Port: ${port}`);
    
  } catch (error) {
    console.error('‚ùå Setup failed:', error.message);
  } finally {
    rl.close();
  }
}

setupMigration();
